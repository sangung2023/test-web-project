// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 사용자 (User)
model User {
  userId        Int      @id @default(autoincrement())
  name      String   @db.VarChar(50)
  email     String   @unique @db.VarChar(100)
  password  String   @db.VarChar(255)
  birthday  DateTime @db.Date // 생년월일
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  // Relations
  boards    Board[]  // User can have multiple Boards
  supports  Support[] // User can have multiple Support inquiries

  @@map("users")
}

// 게시판 (Board)
model Board {
  boardId        Int      @id @default(autoincrement())
  userId    Int      // 사용자 아이디 (Foreign Key)
  title     String   @db.VarChar(255) // 게시판 제목
  content   String   @db.Text // 게시글 내용
  image     String?  @db.Text // 게시글 사진 (nullable)
  createdAt DateTime @default(now()) @map("created_at") // 작성 시간
  updatedAt DateTime @updatedAt @map("updated_at") // 수정 시간
  
  // Relations
  user      User     @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@map("boards")
}

// 문의 내역 (Support)
model Support {
  supportId        Int             @id @default(autoincrement())
  userId    Int             // 사용자 아이디 (Foreign Key)
  title     String          @db.VarChar(255) // 문의 제목
  category  SupportCategory // 카테고리 (ENUM, NOT NULL)
  content   String          @db.Text // 문의 내용
  file      String?         @db.VarChar(255) // 첨부파일 (nullable)
  createdAt DateTime        @default(now()) @map("created_at") // 작성 날짜
  updatedAt DateTime        @updatedAt @map("updated_at") // 수정 날짜
  
  // Relations
  user      User            @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@map("supports")
}

// 카테고리 ENUM
enum SupportCategory {
  PROJECT   // 일반 문의
  ETC // 기술 문의
}
